#!/usr/bin/env python
import argparse
import importlib
import os
import glob
import inspect
from ocdsdata.base import Fetcher

def main():

    sources = gather_sources()

    parser = argparse.ArgumentParser()
    parser.add_argument("--verbose", help="increase output verbosity",
                    action="store_true")
    parser.add_argument("--run", help="run one source only")
    parser.add_argument("--runall", help="run all sources",
                    action="store_true")
    parser.add_argument("--basedir", help="base dir - defaults to current directory")
    parser.add_argument("--outputdir", help="output dir - defaults to id. Ignored if running more than one runner.")

    args = parser.parse_args()

    run = []

    if args.runall:
        for source_id, source_class in sources.items():
            run.append({'id': source_id, 'source_class': source_class})
    elif args.run:
        if args.run in sources:
            run.append({'id': args.run, 'source_class': sources[args.run]})
        else:
            print("We can not find a source that you requested! You requested: %s" % [args.run])
            quit(-1)

    if not run:
        print("You have not specified anything to run! Try --run=??? or --runall")
        print("You can run:")
        for source_id, source_info in sources.items():
            print(" - %s" % source_id)
        quit(-1)

    if args.verbose:
        print("We will run: ")
        for sourceInfo in run:
            print(" - %s" % sourceInfo['id'])

    base_dir = args.basedir or os.getcwd()
    remove_dir = False

    for source_info in run:
        output_directory = source_info['id']
        if len(run) == 1 and args.outputdir:
            output_directory = args.outputdir
            
        if args.verbose:
            print("Now running: %s (Output Dir: %s)" % (source_info['id'], output_directory))

        instance = source_info['source_class'](base_dir, remove_dir=remove_dir, output_directory=output_directory)
        instance.run_all()


def gather_sources():
    sources = {}

    dir_path = os.path.dirname(os.path.realpath(__file__))
    sources_dir = os.path.join(dir_path, 'ocdsdata', 'sources')
    for file in glob.glob(sources_dir + '/*.py'):
        module = importlib.import_module('ocdsdata.sources.' + file.split('/')[-1].split('.')[0])
        for item in dir(module):
            value = getattr(module, item)
            if inspect.isclass(value) and issubclass(value, Fetcher) and value is not Fetcher:
                sources[getattr(value, 'source_id')] = value
    return sources

if __name__ == '__main__':
    main()
